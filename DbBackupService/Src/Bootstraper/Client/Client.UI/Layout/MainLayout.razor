@inherits LayoutComponentBase

@inject IJSRuntime JsRuntime

<MudThemeProvider IsDarkMode="true"/>
<MudPopoverProvider />
<MudDialogProvider CloseButton="true" CloseOnEscapeKey="true" Position="DialogPosition.Center"
                   BackgroundClass="blurDialogBg"/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="4" Dense="true">
        <MudIconButton Class="mr-4" Icon="@Icons.Material.Filled.Menu" Size="Size.Medium" OnClick="@(() => _drawerOpen = !_drawerOpen)" />
        
        <MudImage Alt="Logo" Elevation="4" Src="@Assets["media/BackupSystemLogo.jpg"]" Style="height: 80%;" />
        <MudSpacer/>
        <AuthorizeView>
            <Authorized>
                <MudButton Color="Color.Secondary" Variant="Variant.Text"
                           Size="Size.Small" StartIcon="@Icons.Material.Filled.ArrowRight">
                    Logout
                </MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton Color="Color.Secondary" Variant="Variant.Text"
                           Size="Size.Small" StartIcon="@Icons.Material.Filled.ArrowRight">
                    Login
                </MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    
    <MudDrawer Variant="@DrawerVariant.Temporary" Elevation="5" @bind-Open="_drawerOpen" 
               ClipMode="DrawerClipMode.Always" OverlayAutoClose="true" Overlay="true">
        <NavMenu/>
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code{
    private bool _drawerOpen;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            await JsRuntime.InvokeAsync<object>("hideElementById", "preload");

        await base.OnAfterRenderAsync(firstRender);
    }
}