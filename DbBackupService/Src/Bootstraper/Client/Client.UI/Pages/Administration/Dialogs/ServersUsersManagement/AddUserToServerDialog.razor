@using Client.UI.Data.Services

@inject AdministrationHttpService Service
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudPaper Class="pa-4 rounded-2xl mud-elevation-1">
            <MudTable Items="@_allUsers" Hover="true" Dense="true" Bordered="false">
                <HeaderContent>
                    <MudTh>User</MudTh>
                    <MudTh>Actions</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="User">@context</MudTd>
                    <MudTd DataLabel="Actions">
                        <MudTooltip Text="Grant access to this server">
                            <MudButton Variant="Variant.Outlined"
                                       Color="Color.Success"
                                       OnClick="@(() => AddUser(context))">
                                Add
                            </MudButton>
                        </MudTooltip>
                    </MudTd>
                </RowTemplate>

                <PagerContent>
                    <MudTablePager PageSizeOptions="@([10, 25, 50, 100])" />
                </PagerContent>
            </MudTable>
        </MudPaper>
    </DialogContent>

    <DialogActions>
        <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public Guid ServerId { get; set; }

    private List<string> _allUsers = new();

    protected override async Task OnInitializedAsync()
    {
        var result = await Service.GetAllUsersThatDoesNotHaveAccessToServer(ServerId);

        result.Switch(
            list => _allUsers = list,
            error => Snackbar.Add(error, Severity.Error)
        );
    }

    private void Cancel() => MudDialog.Cancel();

    private void AddUser(string email)
    {
        MudDialog.Close(DialogResult.Ok(email));
    }
}