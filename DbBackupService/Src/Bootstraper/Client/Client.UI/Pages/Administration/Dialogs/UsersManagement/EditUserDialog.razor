@using Client.UI.Data.Services
@using Modules.Auth.Shared.ActionsRequests

@inject AdministrationHttpService Service
@inject ISnackbar SnackBar

<MudDialog>
    <DialogContent>
        <EditForm Model="User" OnValidSubmit="Save"
                  OnInvalidSubmit="@(() => SnackBar.Add("Please check the entered data", Severity.Warning))">
            <DataAnnotationsValidator />

            <MudCard Elevation="4" Class="pa-4 rounded-2xl mb-5">
                <MudCardContent>
                    <MudGrid Spacing="3">
                        <MudItem xs="12">
                            <MudTextField Label="User ID"
                                          Variant="Variant.Outlined"
                                          Disabled="true"
                                          Adornment="Adornment.Start"
                                          AdornmentIcon="@Icons.Material.Filled.Fingerprint"
                                          @bind-Value="User.Id"
                                          For="@(() => User.Id)" />
                        </MudItem>

                        <MudItem xs="12">
                            <MudTextField Label="Email Address"
                                          Variant="Variant.Outlined"
                                          Disabled="@_isSaving"
                                          InputType="InputType.Email"
                                          InputMode="InputMode.email"
                                          Adornment="Adornment.Start"
                                          AdornmentIcon="@Icons.Material.Filled.Email"
                                          @bind-Value="User.Email"
                                          For="@(() => User.Email)" />
                        </MudItem>

                        <MudItem xs="12">
                            <MudSwitch T="bool"
                                       @bind-Value="_changePassword"
                                       Disabled="@_isSaving"
                                       Color="Color.Primary"
                                       Label="Change password" />
                        </MudItem>

                        @if (_changePassword)
                        {
                            <MudItem xs="12" sm="6">
                                <MudTextField Label="New Password"
                                              Variant="Variant.Outlined"
                                              Disabled="@_isSaving"
                                              InputType="InputType.Password"
                                              Adornment="Adornment.Start"
                                              AdornmentIcon="@Icons.Material.Filled.Lock"
                                              @bind-Value="User.Password"
                                              For="@(() => User.Password)" />
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudTextField Label="Confirm New Password"
                                              Variant="Variant.Outlined"
                                              Disabled="@_isSaving"
                                              InputType="InputType.Password"
                                              Adornment="Adornment.Start"
                                              AdornmentIcon="@Icons.Material.Filled.LockReset"
                                              @bind-Value="User.ConfirmPassword"
                                              For="@(() => User.ConfirmPassword)" />
                            </MudItem>
                        }
                    </MudGrid>
                </MudCardContent>
            </MudCard>
            
            <MudContainer Class="d-flex justify-between pa-4">
                <MudButton OnClick="Cancel" Variant="Variant.Text" Color="Color.Default" Disabled="@_isSaving">
                    Cancel
                </MudButton>

                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                    @if (_isSaving)
                    {
                        <MudProgressCircular Color="Color.Secondary" Indeterminate="true" Size="Size.Small" />
                    }
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Success"
                               Disabled="@_isSaving">
                        Save
                    </MudButton>
                </MudStack>
            </MudContainer>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    private bool _isSaving;
    private bool _changePassword;

    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public required EditUserRequest User { get; set; }

    private void Cancel() => MudDialog.Cancel();

    private async Task Save()
    {
        _isSaving = true;

        if (!_changePassword)
            User.Password = "";

        var result = await Service.EditUserAsync(User);

        result.Switch(
            _ =>
            {
                SnackBar.Add("Changes saved successfully", Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
            },
            error => SnackBar.Add(error, Severity.Error)
        );

        _isSaving = false;
    }
}
