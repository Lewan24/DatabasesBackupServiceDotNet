@page "/account/register"

@using Blazored.LocalStorage
@using Client.UI.Data.Services
@using Modules.Auth.Shared.ActionsRequests

@layout AuthLayout

@inject NavigationManager NavigationManager
@inject AuthStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject ISnackbar SnackBar

<MudContainer MaxWidth="MaxWidth.ExtraSmall" Class="d-flex flex-column align-center justify-center min-vh-100 pa-4">
    <!-- Logo i nagłówek -->
    <MudPaper Class="d-flex flex-column align-center justify-center pa-6 mud-elevation-6 rounded-2xl" Style="width:100%; max-width:420px;">
        <MudImage Src="@Assets["media/OctoBackupLogo.png"]" Alt="OctoBackup" Width="200" Class="mb-4" />
        <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-6" Color="Color.Primary">
            Rejestracja w <MudButton Color="Color.Primary" Variant="Variant.Text" Size="Size.Large" OnClick="@(() => NavigationManager.NavigateTo("/", false))">OctoBackup</MudButton>
        </MudText>

        <!-- Formularz -->
        <EditForm Model="@RegisterRequest" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator/>
            <MudStack Spacing="2">
                <MudTextField Label="Adres Email"
                              Variant="Variant.Outlined"
                              FullWidth="true"
                              Disabled="@_isLoggingIn"
                              @bind-Value="RegisterRequest.Email"
                              For="@(() => RegisterRequest.Email)"
                              Placeholder="np. j.kowalski@firma.pl"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Email"/>

                <MudTextField Label="Hasło"
                              Variant="Variant.Outlined"
                              FullWidth="true"
                              Disabled="@_isLoggingIn"
                              @bind-Value="RegisterRequest.Password"
                              For="@(() => RegisterRequest.Password)"
                              InputType="InputType.Password"
                              Placeholder="Wpisz hasło"
                              HelperText="Użyj silnego hasła"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Lock"/>

                <MudTextField Label="Powtórz hasło"
                              Variant="Variant.Outlined"
                              FullWidth="true"
                              Disabled="@_isLoggingIn"
                              @bind-Value="RegisterRequest.PasswordConfirm"
                              For="@(() => RegisterRequest.PasswordConfirm)"
                              InputType="InputType.Password"
                              Placeholder="Powtórz hasło"
                              HelperText="Wpisz hasło ponownie"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.LockReset"/>
            </MudStack>

            <!-- Akcje -->
            <MudStack Row="true" AlignItems="AlignItems.Center" JustifyContent="SpaceBetween" Class="mt-4">
                <MudButton Variant="Variant.Text"
                           Color="Color.Secondary"
                           Disabled="@_isLoggingIn"
                           Href="/account/login"
                           StartIcon="@Icons.Material.Filled.Login">
                    Zaloguj się
                </MudButton>

                @if (_isLoggingIn)
                {
                    <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Medium"/>
                }
                else
                {
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               EndIcon="@Icons.Material.Filled.PersonAdd">
                        Zarejestruj się
                    </MudButton>
                }
            </MudStack>
        </EditForm>
    </MudPaper>

    <!-- Stopka -->
    <MudText Typo="Typo.caption" Align="Align.Center" Class="mt-6" Style="@($"color: {DefaultLayout.ThemePalette.TextSecondary}")">
        © @(DateTime.Now.Year) OctoBackup. Wszystkie prawa zastrzeżone.
    </MudText>
</MudContainer>

@code {
    RegisterRequest RegisterRequest { get; } = new();
    bool _isLoggingIn;

    async Task OnSubmit()
    {
        _isLoggingIn = true;

        var registerResult = await AuthStateProvider.Register(RegisterRequest);

        if (!registerResult.Success)
        {
            SnackBar.Add(registerResult.Msg!, Severity.Error);
            _isLoggingIn = false;
            return;
        }

        await LocalStorage.SetItemAsync("User", registerResult.Msg);
        NavigationManager.NavigateTo("/account/login/", false);
    }
}
