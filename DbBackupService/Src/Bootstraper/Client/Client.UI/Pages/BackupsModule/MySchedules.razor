@page "/schedules"

@using Modules.Backup.Core.Entities.DbContext

<PageTitle>Schedules</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-6">
    <MudText Typo="Typo.h4" Color="Color.Primary" Class="mb-6">Harmonogramy backupów</MudText>

    <MudPaper Class="pa-4 mud-elevation-2 rounded-2xl">
        <MudStack Row="true" JustifyContent="SpaceBetween" Class="mb-4">
            <MudText Typo="Typo.h6">Lista harmonogramów</MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add">Nowy harmonogram</MudButton>
        </MudStack>

        <MudTable Items="@_schedules" Hover="true" Dense="true">
            <HeaderContent>
                <MudTh>Nazwa</MudTh>
                <MudTh>Status</MudTh>
                <MudTh>Następny backup</MudTh>
                <MudTh>Akcje</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.Name</MudTd>
                <MudTd>
                    @if (context.IsEnabled)
                    { 
                        <MudChip T="string" Color="Color.Success">Aktywny</MudChip>
                    }
                    else
                    {
                        <MudChip T="string" Color="Color.Error">Wyłączony</MudChip>
                    }
                </MudTd>
                <MudTd>@context.NextBackupDate.ToString("g")</MudTd>
                <MudTd>
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Warning" />
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" />
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
</MudContainer>

@code {
    private List<BackupSchedule> _schedules = new()
    {
        new() { Name="Codzienny backup", DbConnectionId=Guid.NewGuid(), ConfigurationJson="{}", NextBackupDate=DateTime.Now.AddHours(12) }
    };
}